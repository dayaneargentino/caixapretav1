/* ===== GLITCH EFFECTS CSS ===== */

/* Base glitch animation */
.glitch {
    animation: glitch 0.3s ease-in-out infinite;
}

/* Scanlines effect */
.scanlines {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1000;
    background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(0,255,247,0.03) 2px,
        rgba(0,255,247,0.03) 4px
    );
    animation: scanlines 0.1s linear infinite;
}

/* CRT flicker effect */
.crt-flicker {
    animation: crt-flicker 0.15s infinite linear;
}

/* Matrix rain effect */
.matrix-rain {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 999;
    opacity: 0.1;
}

.matrix-column {
    position: absolute;
    top: -100%;
    color: var(--neon-cyan);
    font-size: 1.2rem;
    font-family: 'Courier New', monospace;
    animation: matrix-fall 3s linear infinite;
}

/* Glitch text effect */
.glitch-text {
    position: relative;
    animation: glitch 0.3s ease-in-out infinite;
}

.glitch-text::before,
.glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitch-text::before {
    animation: glitch-1 0.3s ease-in-out infinite;
    color: var(--neon-magenta);
    z-index: -1;
}

.glitch-text::after {
    animation: glitch-2 0.3s ease-in-out infinite;
    color: var(--neon-yellow);
    z-index: -2;
}

/* Error screen effect */
.error-screen {
    background: var(--bg-dark);
    color: var(--accent-red);
    font-family: 'Courier New', monospace;
    overflow: hidden;
}

/* Corrupted data effect */
.corrupted-data {
    position: relative;
}

.corrupted-data::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(255, 0, 0, 0.1) 2px,
        rgba(255, 0, 0, 0.1) 4px
    );
    animation: corruption 0.1s infinite;
    z-index: 2;
}

/* Keyframe Animations */
@keyframes glitch {
    0%, 100% { 
        transform: translate(0); 
        text-shadow: 0 0 10px currentColor;
    }
    20% { 
        transform: translate(-2px, 2px); 
        text-shadow: -2px 2px 10px currentColor;
    }
    40% { 
        transform: translate(-2px, -2px); 
        text-shadow: -2px -2px 10px currentColor;
    }
    60% { 
        transform: translate(2px, 2px); 
        text-shadow: 2px 2px 10px currentColor;
    }
    80% { 
        transform: translate(2px, -2px); 
        text-shadow: 2px -2px 10px currentColor;
    }
}

@keyframes glitch-1 {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(-3px, 3px); }
    40% { transform: translate(-3px, -3px); }
    60% { transform: translate(3px, 3px); }
    80% { transform: translate(3px, -3px); }
}

@keyframes glitch-2 {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(3px, -3px); }
    40% { transform: translate(3px, 3px); }
    60% { transform: translate(-3px, -3px); }
    80% { transform: translate(-3px, 3px); }
}

@keyframes scanlines {
    0% { transform: translateY(0); }
    100% { transform: translateY(4px); }
}

@keyframes crt-flicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.95; }
}

@keyframes matrix-fall {
    0% { top: -100%; }
    100% { top: 100vh; }
}

@keyframes corruption {
    0% { transform: translateX(0); }
    100% { transform: translateX(1px); }
}

/* Flicker effect */
.flicker {
    animation: flicker 0.5s ease-in-out infinite;
}

@keyframes flicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* Static noise effect */
.static-noise {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 998;
    background-image: 
        radial-gradient(circle at 25% 25%, rgba(255,255,255,0.1) 1px, transparent 1px),
        radial-gradient(circle at 75% 75%, rgba(255,255,255,0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: static 0.2s infinite;
}

@keyframes static {
    0%, 100% { opacity: 0.1; }
    50% { opacity: 0.3; }
}

/* Error code styling */
.error-code {
    font-family: 'Courier New', monospace;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 2px;
}

/* Progress bar glitch */
.progress-glitch {
    position: relative;
    overflow: hidden;
}

.progress-glitch::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0%;
    background: linear-gradient(90deg, var(--neon-cyan), var(--neon-magenta));
    animation: progress-glitch 4s ease-out forwards;
}

@keyframes progress-glitch {
    0% { width: 0%; }
    50% { width: 45%; }
    60% { width: 42%; }
    70% { width: 48%; }
    80% { width: 52%; }
    90% { width: 49%; }
    100% { width: 100%; }
}

/* Text corruption effect */
.text-corruption {
    position: relative;
}

.text-corruption::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: var(--accent-red);
    animation: text-corruption 0.1s infinite;
    z-index: 1;
}

@keyframes text-corruption {
    0%, 100% { opacity: 0; }
    50% { opacity: 0.3; }
} 